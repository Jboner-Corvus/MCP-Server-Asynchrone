# docker-compose.yml (Version Corrigée avec Nginx)
services:
  fastmcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastmcp_server_app
    # On ne publie PLUS le port de l'application directement sur l'hôte.
    # Seul Nginx sera accessible de l'extérieur.
    # ports:
    #  - '8080:8080' # Ligne à supprimer ou commenter
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_net

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: pnpm run start:worker
    container_name: fastmcp_worker
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_net

  redis:
    image: redis:7.2-alpine
    container_name: fastmcp_redis
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD?Variable REDIS_PASSWORD non définie dans .env}
    healthcheck:
      test: ['CMD', 'redis-cli', '-h', '127.0.0.1', '-p', '6379', '-a', '${REDIS_PASSWORD}', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app_net

  # ==========================================================
  # AJOUT : Le service Nginx comme reverse proxy
  # ==========================================================
  nginx:
    image: nginx:1.25-alpine
    container_name: fastmcp_nginx
    ports:
      # Nginx écoute sur le port 8080 de l'hôte et le redirige vers le port 80 du conteneur Nginx.
      - '8080:80'
    volumes:
      # On monte le fichier de configuration Nginx dans le conteneur.
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - fastmcp-server
    networks:
      - app_net

volumes:
  redis_data:

networks:
  app_net:
