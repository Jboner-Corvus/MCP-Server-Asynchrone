services:
  # NGINX : Notre nouveau point d'entrée qui gère le CORS.
  nginx:
    image: nginx:1.27-alpine
    container_name: fastmcp_nginx
    ports:
      # Seul Nginx expose le port 8080 à l'extérieur.
      - "${HOST_PORT:-8080}:8080"
    volumes:
      # On lie notre configuration Nginx.
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - fastmcp-server
    restart: unless-stopped
    networks:
      - app_net

  # SERVEUR FastMCP : N'est plus exposé directement.
  fastmcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastmcp_server_app
    # Le port n'est plus publié ici, Nginx gère l'accès.
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_net

  # WORKER : Inchangé.
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: pnpm run start:worker
    container_name: fastmcp_worker
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_net

  # REDIS : Inchangé.
  redis:
    image: redis:7.2-alpine
    container_name: fastmcp_redis
    volumes:
      - redis_data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD?Variable REDIS_PASSWORD non définie dans .env}
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "127.0.0.1", "-p", "6379", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app_net

volumes:
  redis_data:

networks:
  app_net: