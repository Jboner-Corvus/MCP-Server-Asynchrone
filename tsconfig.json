{
  "compilerOptions": {
    /* Basic Options */
    "target": "ES2022",
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true, // Important si fastmcp-local est traité comme une dépendance externe
    "forceConsistentCasingInFileNames": true,

    /* Output Options pour MCP++ */
    "outDir": "./dist", // CORRIGÉ: Le répertoire de sortie est maintenant ./dist
    "declaration": true,
    "sourceMap": true,

    /* Root Directory pour MCP++ */
    "rootDir": "./src", // Seules les sources de MCP++ sont compilées par ce tsconfig

    /* Path Mapping (peut ne plus être nécessaire ou pointer vers les types compilés) */
    "baseUrl": ".",
    // Les "paths" pour "fastmcp" pourraient ne plus être nécessaires si
    // TypeScript peut résoudre "fastmcp" via node_modules (grâce au lien symlink "file:")
    // et si le package.json de "fastmcp-local" a un champ "types" correct.
    // Si vous les conservez, ils devraient idéalement pointer vers les .d.ts compilés.
    // Exemple si les types compilés sont dans libs/fastmcp-local/dist :
    // "paths": {
    //   "fastmcp": ["libs/fastmcp-local/dist/index.d.ts"],
    //   "fastmcp/*": ["libs/fastmcp-local/dist/*"]
    // },
    // Pour l'instant, nous les enlevons, en supposant une résolution standard de module.

    /* Other common options */
    "resolveJsonModule": true,
    "allowJs": false,
    "isolatedModules": true
    // "noEmit": false // Pour un build réel.
  },
  "include": [
    "src/**/*" // N'inclut que les fichiers sources de l'application MCP++
  ],
  "exclude": [
    "node_modules",
    "dist",
    "libs", // Exclure explicitement le répertoire libs des sources à compiler par CE tsconfig
    "**/*.test.ts",
    "**/__tests__/*",
    "coverage/"
  ]
}
